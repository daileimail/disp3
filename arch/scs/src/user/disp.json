{
	"proto": {
		"schemas": {
			"record_sms": {
				"fields": {
					"phone": {
						"type": "string",
						"index": 1
					},
					"tplid": {
						"type": "string"
					},
					"time": {
						"type": "datetime",
						"default": 0
					},
					"refid": {
						"type": "string"
					},
					"state": {
						"type": "int"
					}
				}
			},
			"record_sms_daily": {
				"fields": {
					"ip": {
						"type": "string"
					},
					"date": {
						"type": "date"
					}
				}
			},
			"smstpl": {
				"text": "短信模板",
				"seed": [{
					"tplid": "code",
					"content": "短信验证码为：%code%，有效时间15分钟，感谢使用学银钱包，如有疑问或非本人操作，请咨询：4009207299"
				}, {
					"tplid": "loan_async_withdraw_success",
					"content": "您申请的%amount%元借款已经成功，将在1~2天到账尾号%no%的储蓄卡，请注意查收。"
				}, {
					"tplid": "loan_async_deposit_success",
					"content": "【学银钱包】我们已经收到您%month%月份的还款%amount%元。"
				}, {
					"tplid": "loan_repay_hint_before_duedate_3day",
					"content": "您本期的应还款为%amount%元，最后还款日期为%duedate%，请准时还款，以免影响信用等级。若已还款，请忽略。"
				}, {
					"tplid": "loan_repay_hint_after_duedate_weekly",
					"content": "尊敬的会员，您应于%duedate%还款%amount%元，现已逾期。逾期还款会产生滞纳金及手续费，并会影响您的个人信用，请尽快还款！"
				}],
				"fields": {
					"tplid": {
						"type": "string",
						"index": 1
					},
					"content": {
						"type": "string",
						"index": 1
					},
					"time": {
						"type": "datetime",
						"default": 0
					}
				}
			},
			"smscode": {
				"fields": {
					"phone": {
						"type": "string",
						"index": 1
					},
					"code": {
						"type": "string",
						"index": 1
					},
					"time": {
						"type": "datetime"
					}
				}
			},
			"record_user_signin": {},
			"invite": {},
			"channel": {},
			"invite": {},
			"channel": {},
			"session": {
				"fields": {
					"session": {
						"text": "会话",
						"type": "string",
						"index": 1
					},
					"device_token": {
						"text": "设备token",
						"type": "string"
					},
					"time": {
						"text": "时间",
						"type": "string"
					},
					"channel": {
						"text": "渠道",
						"type": "string"
					},
					"version": {
						"text": "版本号",
						"type": "string"
					}
				}
			},
			"user": {
				"fields": {
					"phone": {
						"type": "string",
						"text": "手机号",
						"index": 1,
						"unique": true
					},
					"password": {
						"encrypt": "bcrypt",
						"type": "string",
						"hidden": true
					},
					"paypassword": {
						"encrypt": "bcrypt",
						"type": "string",
						"hidden": true
					},
					"token": {
						"type": "string",
						"hidden": true
					},
					"invite": {
						"text": "注册渠道",
						"type": "string"
					},
					"inviteby": {
						"text": "邀请人",
						"type": "ObjectId"
					},
					"invitecode": {
						"text": "邀请码",
						"type": "string"
					},
					"modifytime": {
						"text": "修改时间",
						"type": "datetime",
						"default": 0,
						"setonmodify": true
					},
					"createtime": {
						"text": "注册时间",
						"type": "datetime",
						"default": 0
					}
				}
			}
		},
		"apis": {
			"validate_signup": {
				"text": "验证注册信息是否有效",
				"params": {
					"phone": {
						"type": "string",
						"text": "手机号",
						"required": true
					},
					"password": {
						"type": "string",
						"text": "密码",
						"required": true
					},
					"invitecode": {
						"type": "string",
						"text": "邀请码"
					}
				},
				"controllers": [{
					"type": "db",
					"method": "select",
					"schema": "user",
					"where": "{phone: phone}",
					"result": "user",
					"check": {
						"user": {
							"message": "用户名已注册",
							"code": 1
						}
					}
				}, {
					"type": "async",
					"method": "Invite.verify",
					"params": "invitecode",
					"send": "{success: true}"
				}]
			},
			"sms_send_signup": {
				"text": "注册时发送验证码",
				"params": {
					"phone": {
						"type": "string",
						"required": true
					}
				},
				"controllers": [{
					"type": "db",
					"schema": "smscode",
					"method": "select",
					"where": "{phone: phone}",
					"check": {
						"result && new Date().getTime() - new Date(result.time).getTime() < 60000": "发送短信过于频繁"
					},
					"do": "var code = libRandom.genNum(4);"
				}, {
					"type": "db",
					"schema": "user",
					"method": "select",
					"where": "{phone: phone}",
					"check": {
						"result": "该号码已被注册"
					}
				}, {
					"type": "async",
					"method": "Sms.send",
					"params": "{phone: phone, code: code, tplid: 'code',ip:req.ip}"
				}, {
					"type": "db",
					"schema": "smscode",
					"method": "upsert",
					"where": "{phone: phone}",
					"set": "{code: code, time: new Date()}",
					"send": "result"
				}]
			},
			"sms_send_reg": {
				"text": "已注册用户发送验证码",
				"params": {
					"phone": {
						"required": true
					}
				},
				"controllers": [{
					"type": "db",
					"schema": "smscode",
					"method": "select",
					"where": "{phone: phone}",
					"check": {
						"result && new Date().getTime() - new Date(result.time).getTime() < 60000": "发送短信过于频繁"
					},
					"do": "var code = libRandom.genNum(4);"
				}, {
					"type": "db",
					"schema": "user",
					"method": "select",
					"where": "{phone: phone}",
					"check": {
						"!result": "该号码未被注册"
					}
				}, {
					"type": "async",
					"method": "Sms.send",
					"params": "{phone: phone, code: code, tplid: 'code',ip:req.ip}"
				}, {
					"type": "db",
					"schema": "smscode",
					"method": "upsert",
					"where": "{phone: phone}",
					"set": "{code: code, time: new Date()}",
					"send": "result"
				}]
			},
			"sms_verify": {
				"text": "校验验证码",
				"params": {
					"phone": {
						"required": true
					},
					"code": {
						"required": true
					}
				},
				"controllers": [{
					"type": "async",
					"method": "codeVerify.verify2",
					"params": "{phone:phone,code:code}",
					"send": "{success: true}"
				}]
			},
			"session_add": {
				"text": "用户上线时/进入app时调用, 原enter接口",
				"params": {
					"session": {
						"required": true
					},
					"device_token": {
						"required": true
					},
					"channel": {
						"text": "渠道",
						"required": true
					},
					"version": {
						"text": "版本号",
						"required": true
					},
					"userid": {
						"text": "用户id"
					}
				},
				"controllers": [{
					"type": "db",
					"schema": "session",
					"method": "insert",
					"doc": "{device_token: device_token, session: session, version: version, channel: channel, userid: userid}",
					"send": "{success: true}"
				}]
			},
			"session_supp": {
				"text": "发送用户体验数据, 原sendUserExp",
				"params": {
					"session": {
						"required": true
					},
					"index": {
						"required": true
					},
					"content": {
						"required": true
					},
					"userid": {
						"text": "用户id"
					}
				},
				"controllers": [{
					"type": "async",
					"method": "Session.supplementary",
					"params": "{session: session,index:index,content:content,userid: userid}",
					"send": "result"
				}]
			},
			"user_signup": {
				"text": "用户注册",
				"params": {
					"phone": {
						"type": "string",
						"text": "手机号",
						"required": true
					},
					"password": {
						"type": "string",
						"text": "密码",
						"required": true
					},
					"session": {
						"type": "string",
						"text": "session",
						"required": true
					},
					"device_token": {
						"type": "string",
						"required": true
					},
					"invitecode": {
						"type": "string",
						"text": "邀请码"
					}
				},
				"controllers": [{
					"type": "db",
					"method": "select",
					"schema": "session",
					"where": "{session: session, device_token: device_token}",
					"result": "sessionres",
					"check": {
						"!sessionres": "非法注册"
					}
				}, {
					"type": "db",
					"method": "select",
					"schema": "user",
					"where": "{phone: phone}",
					"result": "user",
					"check": {
						"user": {
							"message": "用户名已注册",
							"code": 1
						}
					}
				}, {
					"type": "async",
					"method": "Invite.verify",
					"params": "invitecode",
					"result": "invite",
					"do": "invite.invitecode = libRandom.genNum(11);"
				}, {
					"type": "db",
					"method": "insert",
					"schema": "user",
					"pre": "invite.phone = phone;invite.password=password;;invite.token=libRandom.hat();",
					"doc": "invite",
					"do": "invite._id = result.insertedId; if(checkpoints.signup) checkpoints.signup(invite);",
					"send": "invite"
				}]
			},
			"user_signin": {
				"text": "用户登陆",
				"params": {
					"phone": {
						"type": "string",
						"text": "手机号",
						"required": true
					},
					"password": {
						"type": "string",
						"text": "密码",
						"required": true
					},
					"session": {
						"type": "string",
						"text": "session",
						"required": true
					},
					"device_token": {
						"type": "string",
						"required": true
					}
				},
				"controllers": [{
					"type": "db",
					"method": "select",
					"schema": "user",
					"where": "{phone: phone}",
					"result": "user",
					"check": {
						"!user": "用户名不存在"
					}
				}, {
					"type": "async",
					"method": "codeVerify.verify",
					"params": "password, user, 'password'"
				}, {
					"type": "db",
					"method": "update",
					"schema": "session",
					"where": "{session: session, device_token: device_token}",
					"set": "{userid: user._id}",
					"result": "sessionres",
					"check": {
						"!sessionres.n": "非法登陆"
					}
				}, {
					"pre": "token = libRandom.hat();",
					"type": "db",
					"method": "update",
					"schema": "user",
					"where": "{_id: user._id}",
					"set": "{token: token}",
					"send": "{token: token, _id: user._id}"
				}]
			},
			"user_get": {
				"text": "获取用户信息",
				"controllers": [{
					"type": "raw",
					"do": "req.user.password = req.user.password?1:0;req.user.paypassword=req.user.paypassword?1:0;",
					"send": "req.user"
				}],
				"midwares": ["auth"]
			},
			"user_get_invites": {
				"text": "获取用户邀请的用户列表",
				"controllers": [{
					"type": "raw",
					"do": "req.user.password = req.user.password?1:0;req.user.paypassword=req.user.paypassword?1:0;"
				}, {
					"type": "db",
					"method": "bselect",
					"schema": "user",
					"where": "{invite:req.user.invitecode}",
					"op": "{$project:{_id:0,realname:1,phone:1} }",
					"send": "result"
				}],
				"midwares": ["auth"]
			},
			"user_set_password": {
				"text": "修改密码",
				"params": {
					"phone": {
						"required": true,
						"text": "手机号"
					},
					"code": {
						"required": true,
						"text": "验证码"
					},
					"newpassword": {
						"required": true,
						"text": "新密码"
					}
				},
				"controllers": [{
					"type": "async",
					"method": "codeVerify.verify2",
					"params": "{phone:phone,code:code}"
				}, {
					"type": "db",
					"method": "update",
					"schema": "user",
					"where": "{phone:phone}",
					"set": "{password: newpassword}",
					"send": "{success: true}"
				}]
			},
			"user_modify_paypassword": {
				"text": "修改支付密码",
				"params": {
					"phone": {
						"required": true
					},
					"code": {
						"required": true
					},
					"newpaypassword": {
						"required": true
					}
				},
				"controllers": [{
					"type": "async",
					"method": "codeVerify.verify2",
					"params": "{phone:phone,code:code}"
				}, {
					"type": "db",
					"method": "update",
					"schema": "user",
					"where": "{phone:phone}",
					"set": "{paypassword: newpaypassword}",
					"send": "{success: true}"
				}],
				"midwares": ["auth"]
			},
			"user_verify_paypassword": {
				"text": "校验支付密码",
				"params": {
					"paypassword": {
						"required": true
					}
				},
				"controllers": [{
					"type": "db",
					"method": "select",
					"schema": "user",
					"where": "{_id:req.user._id}",
					"result": "user",
					"check": {
						"!user": "用户名不存在"
					}
				}, {
					"type": "async",
					"method": "codeVerify.verify",
					"params": "paypassword, user, 'paypassword'",
					"send": "{success: true}"
				}],
				"midwares": ["auth"]
			},
			"user_set_paypassword": {
				"text": "设置支付密码",
				"params": {
					"paypassword": {
						"required": true
					}
				},
				"controllers": [{
					"type": "async",
					"method": "db.getModel('user').select",
					"params": "{_id:req.user._id}",
					"result": "result",
					"do": "if(result.paypassword){return sendJson(res,'您已经设置过支付密码了')};"
				}, {
					"type": "db",
					"method": "update",
					"schema": "user",
					"where": "{_id:req.user._id}",
					"set": "{paypassword: paypassword}",
					"send": "{success: true}"
				}],
				"midwares": ["auth"]
			}
		}
	},
	"impl": {
		"databases": {
			"main": {
				"withSchemas": [
					"record_user_signin",
					"record_sms",
					"record_sms_daily",
					"smstpl",
					"smscode",
					"user",
					"channel",
					"session"
				]
			}
		},
		"servers": {
			"fserver": {
				"withApis": [
					"validate_signup",
					"sms_send_signup",
					"sms_send_reg",
					"sms_verify",
					"session_add",
					"session_supp",
					"user_signin",
					"user_signup",
					"user_get",
					"user_get_invites",
					"user_set_password",
					"user_set_paypassword",
					"user_modify_paypassword",
					"user_verify_paypassword"
				]
			}
		}
	}
}